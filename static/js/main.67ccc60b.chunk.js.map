{"version":3,"sources":["modules/loading.js","modules/data.js","modules/search.js","utils/common.js","modules/around.js","modules/menu.js","modules/index.js","styles/global.style.js","components/header/Navi.js","components/header/SearchBar.js","containers/SearchBarContainer.js","components/header/Header.js","components/NotFound404.js","utils/fetchData.js","components/Loading.js","components/Background.js","styles/basic.style.js","components/IntroCarousel.style.js","components/IntroCarousel.js","pages/Intro.js","components/GradeIcon.js","components/SpotItem.js","components/AvatarSlider.style.js","components/AvatarSlider.js","components/PictureSlider.style.js","components/VideoSlider.style.js","components/ArticleItem.js","components/NotFoundResult.js","components/PaginationControlled.js","containers/SearchContainer.js","App.js","pages/Search.js","serviceWorker.js","index.js"],"names":["startLoading","createAction","finishLoading","reducer","handleActions","state","isLoading","setBgImg","setLists","action","produce","draft","path","payload","movies","bgImg","bgImgs","selMovie","selIdx","releaseDates","casts","stillCuts","videos","API_KEY","lists","process","API_URL","IMG_URL","IMG_PATH","w185","w342","w500","w780","w1280","original","CATEGORY","setActive","initialState","menuList","active","text","combineReducers","updatedMenu","map","menu","loading","GlobalStyle","createGlobalStyle","reset","MenuDialog","styled","div","withRouter","props","onClose","open","history","dispatch","useDispatch","className","onClick","key","href","e","preventDefault","menuActions","push","useStyles","makeStyles","theme","searchBox","position","visibility","top","left","zIndex","width","padding","minHeight","boxSizing","backgroundColor","transform","transition","display","spacing","search","borderRadius","shape","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transitions","create","SearchItem","inpRef","classes","InputBase","ref","placeholder","root","input","inputProps","IconButton","aria-label","data-btn-close","Close","SearchBar","onSubmit","useRef","searchRef","responseMatch","useMediaQuery","inputTarget","current","childNodes","keyword","value","blur","classList","remove","add","focus","defaultProps","undefined","flexGrow","boxShadow","menuButton","title","fontSize","verticalAlign","marginRight","Header","useSelector","store","useState","setOpen","appBar","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","AppBar","Toolbar","Typography","variant","to","Theaters","edge","Menu","queryCreator","queries","url","forEach","item","fetchData","a","requestUrl","axios","get","then","result","JSON","parse","request","response","catch","error","console","responseData","rotationAni","keyframes","RingWrap","Ring","RingItem","Loading","BgImgWrap","Background","grayscale","idx","length","style","backgroundImage","size","Wrap","Inner","PageTitle","h2","ImgWrap","ImgItem","IntroCarousel","Intro","location","propTypes","PropTypes","pathname","string","isRequired","func","Text","span","Grade","GradeIcon","certification","classfied","Headline","Box","GradeIconWrap","PosterWrap","Poster","img","TitleBox","TextArea","SpotItem","originalTitle","original_title","overview","posterPath","poster_path","genres","tagline","voteAverage","vote_average","runtime","releaseDate","release_date","mediumZoom","background","margin","halfVoteAverage","alt","src","data-zoom-src","data-zoomable-poster","Rating","name","defaultValue","precision","readOnly","join","large","iframe","Error","NotFoundResult","textAlign","marginTop","curPage","totalPage","React","page","setPage","Pagination","count","onChange","event","querys","cutNum","indexOf","newQeurys","substring","CardList","ul","SearchContainer","data","total_results","total_pages","results","id","onError","target","App","loadedPage","setLoadedpage","slice","split","loadingActions","searchActions","someBgImg","filter","backdrop_path","dataActions","setTimeout","log","exact","component","Boolean","hostname","match","createStore","rootReducers","devToolsEnhancer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.67ccc60b.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nexport const START_LOADING = 'loading/START_LOADING';\nexport const FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(START_LOADING);\nexport const finishLoading = createAction(FINISH_LOADING);\n\nconst initialState = {\n  isLoading: false,\n};\n\nconst reducer = handleActions(\n  {\n    [START_LOADING]: state => {\n      // return produce(state, draft => {\n      //   draft.isLoading = true;\n      // });\n    },\n    [FINISH_LOADING]: state => {\n      // return produce(state, draft => {\n      //   draft.isLoading = false;\n      // });\n    },\n  },\n  initialState,\n);\n\nexport default reducer;\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nexport const PATH = 'data/PATH';\nexport const MOVIES = 'data/MOVIES';\nexport const BG_IMG = 'data/BG_IMG';\nexport const BG_IMGS = 'data/BG_IMGS';\nexport const SEL_IDX = 'data/SEL_IDX';\nexport const SEL_MOVIE = 'data/SEL_MOVIE';\nexport const RELEASE_DATES = 'data/RELEASE_DATES';\nexport const CASTS = 'data/CASTS';\nexport const STILLCUTS = 'data/STILLCUTS';\nexport const VIDEOS = 'data/VIDEOS';\n\nexport const setPath = createAction(PATH); // path string\nexport const setMovies = createAction(MOVIES); // movies []\nexport const setBgImg = createAction(BG_IMG); // bgImg []\nexport const setBgImgs = createAction(BG_IMGS); // bgImgs []\nexport const setSelIdx = createAction(SEL_IDX); // selIdx number\nexport const setSelMovie = createAction(SEL_MOVIE); // selMovie []\nexport const setReleaseDates = createAction(RELEASE_DATES); // releaseDates []\nexport const setCasts = createAction(CASTS); // setCasts []\nexport const setStillCuts = createAction(STILLCUTS); // setStillCutImgs []\nexport const setVideos = createAction(VIDEOS); // setVideos []\n\nconst initialState = {\n  path: '', // 현재 요청 path\n  movies: [], // 무비 리스트\n  bgImgs: [], // 백그라운드 무비 이미지들 url\n  bgImg: [], // 백그라운드 무비 이미지\n  selIdx: 0, // 선택한 무비 리스트 인덱스\n  selMovie: [], // 선택한 무비 정보\n  releaseDates: [], // 선택한 무비 릴리즈 정보들\n  casts: [], // 캐스팅 리스트\n  stillCuts: [], // 선택중인 무비 이미지들\n  videos: [], // 선택중인 무비 비디오들\n};\n\nconst reducer = handleActions(\n  {\n    [PATH]: (state, action) => {\n      return produce(state, draft => {\n        draft.path = action.payload;\n      });\n    },\n    [MOVIES]: (state, action) => {\n      return produce(state, draft => {\n        draft.movies = action.payload;\n      });\n    },\n    [BG_IMG]: (state, action) => {\n      return produce(state, draft => {\n        draft.bgImg = action.payload;\n      });\n    },\n    [BG_IMGS]: (state, action) => {\n      return produce(state, draft => {\n        draft.bgImgs = action.payload;\n      });\n    },\n    [SEL_MOVIE]: (state, action) => {\n      return produce(state, draft => {\n        draft.selMovie = action.payload;\n      });\n    },\n    [SEL_IDX]: (state, action) => {\n      return produce(state, draft => {\n        draft.selIdx = action.payload;\n      });\n    },\n    [RELEASE_DATES]: (state, action) => {\n      return produce(state, draft => {\n        draft.releaseDates = action.payload;\n      });\n    },\n    [CASTS]: (state, action) => {\n      return produce(state, draft => {\n        draft.casts = action.payload;\n      });\n    },\n    [STILLCUTS]: (state, action) => {\n      return produce(state, draft => {\n        draft.stillCuts = action.payload;\n      });\n    },\n    [VIDEOS]: (state, action) => {\n      return produce(state, draft => {\n        draft.videos = action.payload;\n      });\n    },\n  },\n  initialState,\n);\n\nexport default reducer;\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nexport const SET_LISTS = 'search/SET_LISTS';\n\nexport const setLists = createAction(SET_LISTS); // lists []\n\nconst initialState = {\n  lists: [], // 검색 결과 리스트\n};\n\nconst reducer = handleActions(\n  {\n    [SET_LISTS]: (state, action) => {\n      return produce(state, draft => {\n        draft.lists = action.payload;\n      });\n    },\n  },\n  initialState,\n);\n\nexport default reducer;\n","export const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/';\n\nexport const language = 'language=ko-KR';\nexport const region = 'region=KR';\n\nexport const IMG_PATH = {\n  w185: `${IMG_URL}w185`,\n  w342: `${IMG_URL}w342`,\n  w500: `${IMG_URL}w500`,\n  w780: `${IMG_URL}w780`,\n  w1280: `${IMG_URL}w1280`,\n  original: `${IMG_URL}original`,\n};\n\nexport const YOUTUBE_PATH = 'https://www.youtube.com/embed/';\n\nexport const CATEGORY = {\n  NOW_PLAYING: 'movie/now_playing',\n  POPULAR: 'movie/popular',\n  TOP_RATED: 'movie/top_rated',\n  UPCOMING: 'movie/upcoming',\n  MOVIE_DETAIL: 'movie/',\n  SEARCH: 'search/',\n};\n\nexport const shuffleArray = arr => {\n  const inArr = arr.slice();\n  for (let i = inArr.length; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    const x = inArr[i - 1];\n    inArr[i - 1] = inArr[j];\n    inArr[j] = x;\n  }\n  return inArr;\n};\n\nexport const isEmptyObject = obj => {\n  return Object.keys(obj).length === 0;\n};\n\nexport const deviceCheck = () => {\n  const pcDevice = 'win16|win32|win64|mac|macintel';\n  const thisDevice = navigator.platform;\n  let result = '';\n\n  if (thisDevice) {\n    if (pcDevice.indexOf(navigator.platform.toLowerCase()) < 0) {\n      result = 'MOBILE';\n    } else {\n      result = 'PC';\n    }\n    // console.log(result);\n  }\n  return result;\n};\n\n// slick slider bugfix for mobile scrolling\nlet firstClientX = 0;\n\nfunction touchStart(e) {\n  firstClientX = e.touches[0].clientX;\n}\n\nfunction preventTouch(e) {\n  const minValue = 30; // threshold\n  const clientX = e.touches[0].clientX - firstClientX;\n  // Vertical scrolling does not work when you start swiping horizontally.\n  if (Math.abs(clientX) > minValue) {\n    e.preventDefault();\n    e.returnValue = false;\n    return false;\n  }\n  return 1;\n}\n\nexport const touchSlideOn = () => {\n  window.addEventListener('touchstart', touchStart);\n  window.addEventListener('touchmove', preventTouch, { passive: false });\n};\n\nexport const touchSlideOff = () => {\n  window.removeEventListener('touchstart', touchStart);\n  window.removeEventListener('touchmove', preventTouch, {\n    passive: false,\n  });\n};\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nexport const SET_LISTS = 'around/SET_LISTS';\nexport const SET_PATH = 'around/SET_PATH';\n\nexport const setLists = createAction(SET_LISTS); // lists []\nexport const setPath = createAction(SET_PATH); // path string\n\nconst initialState = {\n  lists: [], // 검색 결과 리스트\n  path: '',\n};\n\nconst reducer = handleActions(\n  {\n    [SET_LISTS]: (state, action) => {\n      return produce(state, draft => {\n        draft.lists = action.payload;\n      });\n    },\n    [SET_PATH]: (state, action) => {\n      return produce(state, draft => {\n        draft.path = action.payload;\n      });\n    },\n  },\n  initialState,\n);\n\nexport default reducer;\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { CATEGORY } from 'utils/common';\n\nexport const ACTIVE = 'menu/ACTIVE';\n\nexport const setActive = createAction(ACTIVE);\n\nexport const menuList = [\n  { active: '', text: '상영중', path: CATEGORY.NOW_PLAYING },\n  { active: '', text: '인기순', path: CATEGORY.POPULAR },\n  { active: '', text: '평점순', path: CATEGORY.TOP_RATED },\n  { active: '', text: '상영예정', path: CATEGORY.UPCOMING },\n];\n\nconst initialState = {\n  menuList,\n};\n\nconst reducer = handleActions(\n  {\n    [ACTIVE]: (state, action) => {\n      return produce(state, draft => {\n        const updatedMenu = draft.menuList.map(menu => {\n          if (menu.path === action.payload) {\n            menu.active = 'active';\n          } else {\n            menu.active = '';\n          }\n          return menu;\n        });\n        draft.menuList = updatedMenu;\n      });\n    },\n  },\n  initialState,\n);\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport loading from './loading';\nimport data from './data';\nimport search from './search';\nimport around from './around';\nimport menu from './menu';\n\nexport default combineReducers({\n  loading,\n  // data,\n  // search,\n  // around,\n  // menu,\n});\n","import { reset } from 'styled-reset';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html, body, #root {height: 100%;}\n\n  body { \n    background: #000;\n    color: #fff;\n    font-family: 'Roboto', sans-serif;\n    line-height: 1.5;\n  }\n\n  a {\n    &:link, &:visited {color:inherit; text-decoration:none;}\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// import { language } from 'utils/common';\n// import * as aroundActions from 'modules/around';\n// import * as dataActions from 'modules/data';\n\nimport * as menuActions from 'modules/menu';\n\nimport styled from 'styled-components';\n\nconst MenuDialog = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: hidden;\n  z-index: -1;\n  transition: all 0.3s ease;\n  opacity: 0;\n\n  &.opened {\n    visibility: visible;\n    z-index: 1;\n    opacity: 1;\n  }\n\n  .dimmed {\n    position: fixed;\n    background-color: rgba(0, 0, 0, 0.9);\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  ul {\n    position: relative;\n    display: inline-block;\n    text-align: center;\n\n    li.active {\n      a {\n        opacity: 1;\n      }\n    }\n\n    a {\n      font-size: 10vh;\n      opacity: 0.4;\n      cursor: pointer;\n      transition: all 0.3s ease;\n\n      &:hover,\n      &:focus,\n      &.active {\n        opacity: 1;\n      }\n    }\n\n    @media screen and (max-width: 480px) {\n      a {\n        /* font-size: 3rem; */\n      }\n    }\n  }\n`;\n\nconst Navi = props => {\n  // const classes = useStyles();\n  const { onClose, menuList, open, history } = props;\n  const dispatch = useDispatch();\n\n  const handleLinkClick = path => {\n    // dispatch(aroundActions.setPath(path));\n    // history.push(`/around/${path}?${language}&page=1`);\n    // dispatch(dataActions.setSelIdx(0));\n    dispatch(menuActions.setActive(path));\n    history.push(`/${path}`);\n    onClose();\n  };\n\n  return (\n    <MenuDialog className={open && 'opened'}>\n      <div className=\"dimmed\" onClick={onClose} />\n      <ul>\n        {menuList.map(menu => {\n          return (\n            <li key={menu.text} className={menu.active}>\n              <a\n                href={`${menu.path}`}\n                onClick={e => {\n                  e.preventDefault();\n                  handleLinkClick(menu.path);\n                }}\n              >\n                {menu.text}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </MenuDialog>\n  );\n};\n\nNavi.propTypes = {\n  menuList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default withRouter(Navi);\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Search, Close } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  searchBox: {\n    position: 'fixed',\n    visibility: 'hidden',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    width: '100vw',\n    padding: '12px 16px',\n    minHeight: '60px',\n    boxSizing: 'border-box',\n    backgroundColor: 'rgba(0,0,0,1)',\n    transform: 'translate(0, -100%)',\n    transition: 'transform 0.3s ease, visibility 0.3s ease',\n\n    '&.active': {\n      visibility: 'visible',\n      transform: 'translate(0, 0)',\n    },\n\n    '& $search': {\n      display: 'flex',\n    },\n    '& $searchIcon': {\n      display: 'none',\n    },\n\n    '& button[data-btn-close]': {\n      padding: '0 3px',\n    },\n\n    '& $inputRoot': {\n      width: '100%',\n\n      '& input': {\n        padding: theme.spacing(1, 1, 1, 1),\n        width: 'inherit',\n      },\n    },\n  },\n\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    // width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    // width: '100%',\n    width: '10ch',\n    '&:focus': {\n      width: '20ch',\n    },\n    // [theme.breakpoints.up('sm')]: {\n    //   width: '10ch',\n    //   '&:focus': {\n    //     width: '20ch',\n    //   },\n    // },\n  },\n}));\n\nconst SearchItem = ({ inpRef, onClose }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <Search />\n      </div>\n      <InputBase\n        ref={inpRef}\n        placeholder=\"영화 검색\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n      {onClose && (\n        <IconButton\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n          data-btn-close\n        >\n          <Close />\n        </IconButton>\n      )}\n    </div>\n  );\n};\n\nconst SearchBar = props => {\n  const { onSubmit } = props;\n  const classes = useStyles();\n  const inpRef = useRef();\n  const searchRef = useRef();\n  const responseMatch = useMediaQuery('(min-width:480px)');\n\n  const handleOpen = () => {\n    searchRef.current.classList.add('active');\n    inpRef.current.childNodes[0].focus();\n  };\n\n  const handleClose = () => {\n    searchRef.current.classList.remove('active');\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n\n        const inputTarget = inpRef.current.childNodes[0];\n        const keyword = inputTarget.value;\n\n        if (keyword === '') return;\n\n        inputTarget.value = '';\n        inputTarget.blur();\n\n        if (searchRef.current !== null) {\n          searchRef.current.classList.remove('active');\n        }\n\n        onSubmit(keyword);\n      }}\n    >\n      {responseMatch ? (\n        <SearchItem inpRef={inpRef} />\n      ) : (\n        <>\n          <IconButton aria-label=\"search\" color=\"inherit\" onClick={handleOpen}>\n            <Search />\n          </IconButton>\n          <div ref={searchRef} className={classes.searchBox}>\n            <SearchItem inpRef={inpRef} onClose={handleClose} />\n          </div>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nSearchItem.defaultProps = {\n  onClose: undefined,\n};\n\nSearchItem.propTypes = {\n  inpRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n    .isRequired,\n  onClose: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { language } from 'utils/common';\n\nimport SearchBar from 'components/header/SearchBar';\n\nconst SearchBarContainer = ({ history }) => {\n  const onSubmit = keyword => {\n    history.push(`/search/movie?${language}&query=${keyword}&page=1`);\n  };\n  return <SearchBar onSubmit={onSubmit} />;\n};\n\nSearchBarContainer.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default withRouter(SearchBarContainer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Menu, Theaters } from '@material-ui/icons';\n\nimport Navi from 'components/header/Navi';\nimport SearchBarContainer from 'containers/SearchBarContainer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    boxShadow: 'none',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    transition: 'background .3s linear',\n    '&.filled': {\n      backgroundColor: 'rgba(0,0,0,1)',\n    },\n\n    '& div[class*=Toolbar]': {\n      minHeight: '60px',\n    },\n  },\n  menuButton: {\n    marginLeft: theme.spacing(0),\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: '1.375rem',\n    color: 'white',\n\n    '& a': {\n      display: 'inline-flex',\n      alignItems: 'center',\n      verticalAlign: 'top',\n    },\n\n    '& svg': {\n      fontSize: 'x-large',\n      verticalAlign: 'middle',\n      marginRight: '3px',\n    },\n  },\n}));\n\nconst Header = () => {\n  const { menuList } = useSelector(store => store.menu);\n  const [open, setOpen] = useState(false);\n  const appBar = useRef();\n  const classes = useStyles();\n\n  const handleScroll = () => {\n    // const headerH = document.querySelector('header').offsetHeight;\n    if (window.scrollY > 0) {\n      appBar.current.classList.add('filled');\n    } else {\n      appBar.current.classList.remove('filled');\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <AppBar ref={appBar} position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h1\" className={classes.title}>\n          <Link to=\"/\">\n            <Theaters />\n            Movie\n          </Link>\n        </Typography>\n\n        <SearchBarContainer />\n\n        <IconButton\n          edge=\"end\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={handleClickOpen}\n        >\n          <Menu />\n        </IconButton>\n        <Navi menuList={menuList} open={open} onClose={handleClose} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Error = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst Inner = styled.div`\n  h1 {\n    font-size: 4rem;\n  }\n  p {\n    font-size: 2rem;\n  }\n  a {\n    display: block;\n    margin-top: 30px;\n    text-decoration: underline !important;\n  }\n`;\n\nconst NotFound404 = () => {\n  return (\n    <Error>\n      <Inner>\n        <h1>404</h1>\n        <p>페이지를 찾을 수 없습니다.</p>\n        <Link to=\"/\">홈으로 이동</Link>\n      </Inner>\n    </Error>\n  );\n};\n\nexport default NotFound404;\n","import axios from 'axios';\nimport { API_URL, API_KEY } from './common';\n\nconst queryCreator = (path, queries = []) => {\n  let url = `${API_URL}${path}?api_key=${API_KEY}`;\n  queries.forEach(item => {\n    url += `&${item}`;\n  });\n  return url;\n};\n\nexport default async function fetchData(path, queries = []) {\n  const requestUrl = queryCreator(path, queries);\n  const responseData = await axios\n    .get(requestUrl)\n    .then(result => {\n      return JSON.parse(result.request.response);\n    })\n    .catch(error => {\n      console.error(error);\n      // return error;\n    });\n  return responseData;\n}\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotationAni = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RingWrap = styled.div`\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Ring = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RingItem = styled.div`\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid #fff;\n  border-radius: 50%;\n  animation: rotationAni 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #fff transparent transparent transparent;\n\n  &:nth-child(1) {\n    animation-name: ${rotationAni};\n    animation-delay: -0.45s;\n  }\n  &:nth-child(2) {\n    animation-name: ${rotationAni};\n    animation-delay: -0.3s;\n  }\n  &:nth-child(3) {\n    animation-name: ${rotationAni};\n    animation-delay: -0.15s;\n  }\n`;\nconst Loading = () => {\n  return (\n    <RingWrap>\n      <Ring>\n        <RingItem />\n        <RingItem />\n        <RingItem />\n      </Ring>\n    </RingWrap>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst BgImgWrap = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n\n  &.grayscale {\n    filter: grayscale(100%);\n  }\n\n  div {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    transition: opacity 0.5s linear;\n    z-index: -1;\n    opacity: 0;\n\n    &.on {\n      z-index: 1;\n      opacity: 0.4;\n    }\n  }\n`;\n\nconst Background = ({ bgImgs, selIdx, grayscale }) => {\n  return (\n    <BgImgWrap className={grayscale ? 'grayscale' : ''}>\n      {bgImgs.map((item, idx) => {\n        return bgImgs.length > 1 ? (\n          <div\n            key={item}\n            className={selIdx === idx ? 'on' : ''}\n            style={{\n              backgroundImage: `url(${item})`,\n            }}\n          />\n        ) : (\n          <div\n            key={item}\n            className=\"on\"\n            style={{\n              backgroundImage: `url(${item})`,\n            }}\n          />\n        );\n      })}\n    </BgImgWrap>\n  );\n};\n\nexport default Background;\n\nBackground.defaultProps = {\n  bgImgs: [],\n  selIdx: 0,\n  grayscale: false,\n};\n\nBackground.propTypes = {\n  bgImgs: PropTypes.arrayOf(PropTypes.string),\n  selIdx: PropTypes.number,\n  grayscale: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\n// Values\nexport const headerHeight = '60px';\nexport const headerWidthLaptop = '1200px';\n\n// Colors\nexport const primaryColor = '#142850';\nexport const secondaryColor = '#f2f2f2';\n\n// z-indexes\nexport const headerZindex = 7;\nexport const overlayZindex = 6;\nexport const footerZindex = 5;\nexport const homeIntroZindex = 3;\n\n// Media query breakpoints\nconst size = {\n  MobileLandscape: '480px',\n  TabletPortrait: '768px',\n  TabletLandscape: '992px',\n  Laptops: '1200px',\n};\n\nexport const device = {\n  MobileLandscape: `(min-width: ${size.MobileLandscape})`,\n  TabletPortrait: `(min-width: ${size.TabletPortrait})`,\n  TabletLandscape: `(min-width: ${size.TabletLandscape})`,\n  Laptops: `(min-width: ${size.Laptops})`,\n};\n\n// // Layout components\n// export const Layout = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: 100vh;\n//   main {\n//     padding-top: ${headerHeight};\n//     flex: 1;\n//   }\n// `;\n\n// export const Wrapper = styled.div`\n//   width: 90vw;\n//   margin: 0 auto;\n//   @media ${device.Laptops} {\n//     width: ${headerWidthLaptop};\n//   }\n// `;\n\n// Layout components\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nexport const Wrap = styled.div`\n  padding-top: 164px;\n  padding-bottom: 100px;\n\n  p {\n    margin-top: 1rem;\n  }\n\n  @media screen and (max-width: 480px) {\n    padding-top: 100px;\n    padding-bottom: 0px;\n  }\n`;\n\nexport const DetailWrap = styled(Wrap)`\n  padding-top: 264px;\n\n  @media screen and (max-width: 600px) {\n    padding-top: 200px;\n    padding-bottom: 0px;\n  }\n`;\n\nexport const Inner = styled.div`\n  position: relative;\n  max-width: 1200px;\n  width: 100vw;\n  min-height: 400px;\n  margin: 0 auto;\n  background: rgba(255, 255, 255, 1);\n  box-shadow: 2px 2px 1px rgba(0, 0, 10px, 0.5);\n  color: #000;\n  padding: 30px;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 480px) {\n    padding: 15px;\n  }\n`;\n\n/* title */\nexport const PageTitle = styled.h2`\n  font-size: 2rem;\n  margin-bottom: 10px;\n\n  & span {\n    font-size: 1.25rem;\n    color: #999;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 1.25rem;\n  }\n`;\n","import styled from 'styled-components';\nimport { headerHeight } from 'styles/basic.style';\n\nconst ImgWrap = styled.div`\n  position: relative;\n  margin: 0 auto;\n  width: 340px;\n  height: 510px;\n  background-color: #000;\n  box-sizing: border-box;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n\n  @media only screen and (max-width: 600px) {\n    width: 240px;\n    height: 360px;\n  }\n  @media only screen and (max-width: 480px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nconst ImgItem = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: inherit;\n  height: inherit;\n  background-size: cover;\n  background-position: center;\n  /* opacity: 1;\n  transition: opacity 0.3s ease-in-out; */\n\n  &:after {\n    position: absolute;\n    display: block;\n    content: '';\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.6);\n    transition: background-color 0.3s ease;\n  }\n\n  &:hover:after {\n    background-color: rgba(0, 0, 0, 0);\n  }\n`;\n\nconst SliderItem = styled.div`\n  overflow: visible;\n  padding: 20px 0;\n  outline: 0;\n  vertical-align: top;\n\n  .more {\n    display: none;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 1rem;\n    font-weight: normal;\n    color: #fff;\n    text-align: center;\n    background-color: rgba(0, 0, 0, 0);\n    opacity: 0;\n    transition: all 0.3s ease;\n\n    span {\n      position: absolute;\n      display: inline-block;\n      padding: 17px 40px 15px;\n      left: 50%;\n      top: 50%;\n      /* background-color: rgba(255, 0, 0, 0); */\n      transform: translate(-50%, -50%);\n      box-sizing: border-box;\n      transition: all 0.3s ease;\n    }\n  }\n`;\n\nconst SliderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  width: 100vw;\n  min-width: 320px;\n\n  @media screen and (max-height: 610px) and (orientation: landscape) {\n    display: block;\n  }\n\n  .slick-slider {\n    /* overflow: hidden; */\n    min-height: 0px;\n    min-width: 0px;\n    /* max-height: 510px; */\n    margin-top: ${headerHeight};\n\n    /* .slick-list {\n      padding-top: 50px !important;\n      padding-bottom: 50px !important;\n    } */\n\n    .slick-arrow {\n      z-index: 10;\n      width: 60px;\n      height: 60px;\n      /* background-color: rgba(255, 0, 0, 0);\n      transition: background-color 0.3s ease; */\n\n      &:before {\n        display: none;\n      }\n\n      &.slick-prev {\n        left: 0;\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      /* &:hover {\n        background-color: rgba(255, 0, 0, 0.4);\n      } */\n\n      svg {\n        color: #fff;\n        width: 2rem;\n      }\n    }\n\n    .slick-slide {\n      transform-origin: 50% 70%;\n      transform: scale(0.9);\n      transition: all 0.5s ease-in-out;\n\n      /* 간격을 위해 가상 선택자 사용 */\n      display: flex;\n      &:before {\n        display: block;\n        content: '';\n        width: 30px;\n        flex: 1 1 1;\n      }\n      &:after {\n        display: block;\n        content: '';\n        width: 30px;\n        flex: 1 1 1;\n      }\n\n      @media only screen and (max-width: 600px) {\n        &.slick-center {\n          ${ImgWrap} .more {\n            font-size: 0.875rem;\n\n            span {\n              padding: 12px 20px 10px;\n            }\n          }\n        }\n      }\n\n      @media only screen and (max-width: 480px) {\n        &:before,\n        &:after {\n          width: 10px;\n        }\n\n        &.slick-center {\n          ${ImgWrap} .more {\n            font-size: 0.875rem;\n\n            span {\n              padding: 7px 10px 5px;\n            }\n          }\n        }\n      }\n\n      &.slick-center {\n        transform: scale(1);\n\n        ${ImgWrap} .more {\n          display: block;\n          background-color: rgba(0, 0, 0, 0);\n        }\n\n        ${ImgWrap}:hover .more {\n          opacity: 1;\n          background-color: rgba(0, 0, 0, 0.4);\n\n          /* span {\n            background-color: rgba(255, 0, 0, 0.8);\n          } */\n        }\n\n        ${ImgItem}:after {\n          background-color: rgba(0, 0, 0, 0);\n        }\n      }\n    }\n  }\n`;\n\nexport { SliderWrap, SliderItem, ImgWrap, ImgItem };\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport * as dataActions from 'modules/data';\n\nimport Slider from 'react-slick';\nimport { touchSlideOn, touchSlideOff } from 'utils/common';\nimport {\n  ArrowBackIosOutlined,\n  ArrowForwardIosOutlined,\n} from '@material-ui/icons';\n\nimport * as S from './IntroCarousel.style';\n\nfunction IntroCarousel({ movies, posterUrl, selIdx }) {\n  const dispatch = useDispatch();\n  const sliderRef = useRef();\n\n  useEffect(() => {\n    touchSlideOn();\n    return () => {\n      touchSlideOff();\n    };\n  }, []);\n\n  function PrevArrow(props) {\n    const { className } = props;\n    return (\n      <button\n        type=\"button\"\n        className={className}\n        onClick={() => {\n          sliderRef.current.slickPrev();\n        }}\n      >\n        <ArrowBackIosOutlined />\n        Previous\n      </button>\n    );\n  }\n\n  function NextArrow(props) {\n    const { className } = props;\n    return (\n      <button\n        type=\"button\"\n        className={className}\n        onClick={() => {\n          sliderRef.current.slickNext();\n        }}\n      >\n        <ArrowForwardIosOutlined />\n        Next\n      </button>\n    );\n  }\n\n  PrevArrow.defaultProps = {\n    className: '',\n  };\n\n  PrevArrow.propTypes = {\n    className: PropTypes.string,\n  };\n\n  NextArrow.defaultProps = {\n    className: '',\n  };\n\n  NextArrow.propTypes = {\n    className: PropTypes.string,\n  };\n\n  const settings = {\n    className: 'center',\n    centerMode: true,\n    infinite: true,\n    // slidesToShow: 3,\n    slideToScroll: 1,\n    // centerPadding: '10%',\n    speed: 500,\n    dots: false,\n    initialSlide: selIdx, // 히스토리백 했을 때 해당 인덱스 아이템 활성\n    focusOnSelect: true, // 선택 요소 가운데로 이동\n    variableWidth: true,\n    autoplay: true,\n    autoplaySpeed: 3500,\n    // responsive: [\n    //   {\n    //     breakpoint: 960,\n    //     settings: {\n    //       slidesToShow: 1,\n    //       centerPadding: '10%',\n    //     },\n    //   },\n    // ],\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n    afterChange(index) {\n      dispatch(dataActions.setSelIdx(index));\n    },\n  };\n\n  return (\n    <S.SliderWrap>\n      <Slider ref={sliderRef} {...settings}>\n        {movies.map(item => {\n          return (\n            <S.SliderItem key={item.id}>\n              <S.ImgWrap>\n                <S.ImgItem\n                  style={{\n                    backgroundImage: `url(${posterUrl}${item.poster_path})`,\n                  }}\n                />\n                <Link to={`/detail/${item.id}`} className=\"more\">\n                  <span>자세히 보기</span>\n                </Link>\n              </S.ImgWrap>\n            </S.SliderItem>\n          );\n        })}\n      </Slider>\n    </S.SliderWrap>\n  );\n}\n\nexport default IntroCarousel;\n\nIntroCarousel.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  posterUrl: PropTypes.string.isRequired,\n  selIdx: PropTypes.number.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IMG_PATH, CATEGORY, language } from 'utils/common';\nimport fetchData from 'utils/fetchData';\n\nimport * as loadingActions from 'modules/loading';\nimport * as dataActions from 'modules/data';\nimport * as menuActions from 'modules/menu';\n\nimport Loading from 'components/Loading';\nimport IntroContainer from 'containers/IntroContainer';\n\nconst Intro = ({ location, history }) => {\n  return <>나와랏</>;\n};\n\nexport default Intro;\n\nIntro.propTypes = {\n  location: PropTypes.shape({ pathname: PropTypes.string }).isRequired,\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Text = styled.span``;\n\nconst Grade = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 30px;\n  height: 30px;\n  background-color: #ddd;\n  border-radius: 50%;\n  font-size: 1rem;\n  color: #fff;\n\n  ${Text} {\n    /* position: absolute;\n    margin-top: 1px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%); */\n    color: inherit;\n    font-size: inherit;\n    line-height: 1;\n    white-space: nowrap;\n  }\n\n  &.all {\n    font-size: 0.875rem;\n    background-color: #1abc9c;\n  }\n\n  &.twelve {\n    background-color: #3498db;\n  }\n\n  &.fifteen {\n    background-color: #f39c12;\n  }\n\n  &.nineteen {\n    background-color: #e74c3c;\n  }\n\n  &.undetermined {\n    font-size: 0.875rem;\n    background-color: #8e44ad;\n  }\n\n  @media screen and (max-width: 600px) {\n    width: 24px;\n    height: 24px;\n    font-size: 0.875rem;\n\n    &.all,\n    &.undetermined {\n      font-size: 0.6875rem;\n    }\n  }\n`;\n\nconst GradeIcon = ({ certification }) => {\n  const classfied = () => {\n    switch (certification) {\n      case 'G':\n        return (\n          <Grade className=\"all\">\n            <Text>전체</Text>\n          </Grade>\n        );\n      case 'PG':\n        return (\n          <Grade className=\"twelve\">\n            <Text>12</Text>\n          </Grade>\n        );\n      case 'PG-13':\n        return (\n          <Grade className=\"fifteen\">\n            <Text>15</Text>\n          </Grade>\n        );\n      case 'R':\n      case 'NC-17':\n        return (\n          <Grade className=\"nineteen\">\n            <Text>19</Text>\n          </Grade>\n        );\n      default:\n        return (\n          <Grade className=\"undetermined\">\n            <Text>미정</Text>\n          </Grade>\n        );\n    }\n  };\n\n  return <>{classfied()}</>;\n};\n\nexport default GradeIcon;\n\nGradeIcon.propTypes = {\n  certification: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport mediumZoom from 'medium-zoom';\n\nimport { IMG_PATH } from 'utils/common';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Rating from '@material-ui/lab/Rating';\nimport GradeIcon from './GradeIcon';\n\nconst Headline = styled.div`\n  font-size: 2rem;\n  color: #fff;\n  position: absolute;\n  left: 50%;\n  width: 100%;\n  padding: 0 30px;\n  box-sizing: border-box;\n  text-align: center;\n  top: -132px; /* 상단 영역 중간에 위치 */\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-width: 600px) {\n    font-size: 1rem;\n    top: -94px;\n  }\n`;\n\nconst Box = styled.div`\n  border-bottom: 1px dashed #ddd;\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n`;\n\nconst GradeIconWrap = styled.div``;\n\nconst PosterWrap = styled.div`\n  position: relative;\n  float: left;\n  width: 240px;\n  margin: -100px 30px 15px 0;\n\n  ${GradeIconWrap} {\n    position: absolute;\n    right: 15px;\n    top: 15px;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 180px;\n    margin: -80px 15px 15px 0;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 120px;\n    margin: -60px 15px 15px 0;\n\n    ${GradeIconWrap} {\n      right: 7px;\n      top: 7px;\n    }\n  }\n`;\n\nconst Poster = styled.img`\n  width: 100%;\n  /* border: 1px solid #000;\n  box-sizing: border-box; */\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\n`;\n\nconst TitleBox = styled.div`\n  h1 {\n    font-size: 2.5rem;\n    line-height: 1;\n  }\n  span {\n    font-size: 0.8rem;\n    color: #999;\n  }\n\n  @media screen and (max-width: 600px) {\n    h1 {\n      font-size: 1.75rem;\n    }\n  }\n`;\n\nconst TextArea = styled.div`\n  div {\n    margin-bottom: 1rem;\n  }\n\n  ul {\n    display: flex;\n    align-items: center;\n\n    li {\n      position: relative;\n    }\n\n    li + li {\n      margin-left: 30px;\n\n      &:before {\n        content: '';\n        position: absolute;\n        left: -15px;\n        top: 10%;\n        bottom: 10%;\n        width: 1px;\n        height: 80%;\n        border-left: 1px solid #ccc;\n      }\n    }\n  }\n\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 480px) {\n    div {\n      margin-bottom: 0.5rem;\n    }\n\n    ul {\n      clear: both;\n      display: block;\n      font-size: 0.875rem;\n\n      li {\n        list-style: disc;\n        margin-left: 20px;\n      }\n\n      li + li {\n        margin-left: 20px;\n        &:before {\n          display: none;\n        }\n      }\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n\n  @media screen and (min-width: 481px) and (max-width: 768px) {\n    ul > li span {\n      display: block;\n    }\n  }\n`;\n\nconst SpotItem = props => {\n  const {\n    title,\n    original_title: originalTitle,\n    overview,\n    poster_path: posterPath,\n    genres,\n    tagline,\n    vote_average: voteAverage,\n    runtime,\n    release_date: releaseDate,\n    certification,\n  } = props;\n\n  useEffect(() => {\n    mediumZoom('[data-zoomable-poster]', {\n      background: 'rgba(0, 0, 0, 1)',\n      margin: 30,\n    });\n  }, []);\n\n  const halfVoteAverage = voteAverage / 2;\n  const responseMatch = useMediaQuery('(min-width:600px)');\n\n  return (\n    <>\n      {tagline && <Headline>{tagline}</Headline>}\n      <Box>\n        {posterPath && (\n          <PosterWrap>\n            <Poster\n              alt=\"영화 포스터\"\n              src={`${IMG_PATH.w342}${posterPath}`}\n              data-zoom-src={`${IMG_PATH.w1280}${posterPath}`}\n              data-zoomable-poster\n            />\n            <GradeIconWrap>\n              <GradeIcon certification={certification} />\n            </GradeIconWrap>\n          </PosterWrap>\n        )}\n        <TextArea>\n          <TitleBox>\n            <h1>{title}</h1>\n            <span>{originalTitle}</span>\n          </TitleBox>\n          <div>\n            <Rating\n              name=\"half-rating-read\"\n              defaultValue={halfVoteAverage}\n              precision={0.5}\n              size={responseMatch ? 'large' : 'small'}\n              readOnly\n            />\n          </div>\n          <ul>\n            <li>\n              <span>장르 : </span>\n              <span>{genres.map(item => item.name).join(' / ')}</span>\n            </li>\n            <li>\n              <span>개봉일 : </span>\n              <span>{releaseDate}</span>\n            </li>\n            <li>\n              <span>러닝타임 : </span>\n              <span>{runtime}분</span>\n            </li>\n          </ul>\n          {overview ? <p>{overview}</p> : <p>등록된 줄거리가 없습니다.</p>}\n        </TextArea>\n      </Box>\n    </>\n  );\n};\n\nSpotItem.defaultProps = {\n  title: '',\n  original_title: '',\n  overview: '',\n  poster_path: '',\n  genres: [],\n  tagline: '',\n  vote_average: 0.0,\n  release_date: '',\n  certification: '',\n  runtime: 0,\n};\n\nSpotItem.propTypes = {\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  overview: PropTypes.string,\n  poster_path: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.object),\n  tagline: PropTypes.string,\n  vote_average: PropTypes.number,\n  release_date: PropTypes.string,\n  certification: PropTypes.string,\n  runtime: PropTypes.number,\n};\n\nexport default SpotItem;\n","import styled from 'styled-components';\n\nconst Name = styled.div`\n  margin-top: 10px;\n  text-align: center;\n\n  strong {\n    display: block;\n    font-size: 0.75rem;\n    color: #999;\n  }\n`;\n\nconst SliderItem = styled.div`\n  outline: 0;\n`;\n\nconst SliderWrap = styled.div`\n  padding: 0 30px;\n  .slick-slider {\n    min-height: 0px;\n    min-width: 0px;\n\n    .slick-arrow {\n      z-index: 10;\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      background-color: rgba(0, 0, 0, 0.2);\n      transition: background-color 0.3s ease;\n\n      &:before {\n        display: none;\n      }\n\n      &.slick-prev {\n        left: -30px;\n      }\n\n      &.slick-next {\n        right: -30px;\n      }\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.8);\n      }\n\n      svg {\n        color: #fff;\n        font-size: 1rem;\n      }\n    }\n  }\n`;\n\nexport { SliderWrap, SliderItem, Name };\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport { touchSlideOn, touchSlideOff } from 'utils/common';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  ArrowBackIosOutlined,\n  ArrowForwardIosOutlined,\n} from '@material-ui/icons';\n\nimport * as S from './AvatarSlider.style';\n\nconst useStyles = makeStyles(theme => ({\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: '0 auto',\n  },\n}));\n\nfunction AvatarSlider({ basePath, casts }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    touchSlideOn();\n    return () => {\n      touchSlideOff();\n    };\n  }, []);\n\n  function PrevArrow(props) {\n    const { className, onClick } = props;\n    return (\n      <button type=\"button\" className={className} onClick={onClick}>\n        <ArrowBackIosOutlined />\n        Previous\n      </button>\n    );\n  }\n\n  function NextArrow(props) {\n    const { className, onClick } = props;\n    return (\n      <button type=\"button\" className={className} onClick={onClick}>\n        <ArrowForwardIosOutlined />\n        Next\n      </button>\n    );\n  }\n\n  PrevArrow.defaultProps = {\n    className: '',\n    onClick() {},\n  };\n\n  PrevArrow.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\n  NextArrow.defaultProps = {\n    className: '',\n    onClick() {},\n  };\n\n  NextArrow.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\n  const settings = {\n    infinite: false,\n    slidesToShow: 7,\n    slidesToScroll: 7,\n    speed: 500,\n    dots: false,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 5,\n          slidesToScroll: 5,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n      {\n        breakpoint: 640,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n  };\n\n  return (\n    <S.SliderWrap>\n      <Slider {...settings}>\n        {casts.map(item => {\n          return (\n            <S.SliderItem key={item.id}>\n              <Avatar\n                className={classes.large}\n                alt=\"\"\n                src={`${basePath}${item.profile_path}`}\n              />\n              <S.Name>\n                <strong>\n                  {(item.job && item.job) || (item.character && item.character)}\n                </strong>\n                <div>{item.name}</div>\n              </S.Name>\n            </S.SliderItem>\n          );\n        })}\n      </Slider>\n    </S.SliderWrap>\n  );\n}\n\nexport default AvatarSlider;\n\nAvatarSlider.propTypes = {\n  basePath: PropTypes.string.isRequired,\n  casts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from 'styled-components';\n\nconst ImgWrap = styled.div`\n  overflow: hidden;\n  display: block;\n  margin: 0 auto;\n  width: 260px;\n  height: 146px;\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n\n  > img {\n    overflow: hidden;\n    width: inherit;\n    height: inherit;\n    transition: transform 0.3s ease;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 200px;\n    height: 112px;\n  }\n`;\n\nconst ImgItem = styled.div`\n  overflow: hidden;\n  width: inherit;\n  height: inherit;\n  background-size: cover;\n  background-position: 50% 50%;\n  transition: transform 0.3s ease;\n  cursor: zoom-in;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nconst SliderItem = styled.div`\n  overflow: visible;\n  outline: 0;\n`;\n\nconst SliderWrap = styled.div`\n  &.plural .slick-slider {\n    margin: 0 -30px;\n  }\n\n  @media screen and (max-width: 480px) {\n    &.plural .slick-slider {\n      margin: 0 -15px;\n    }\n  }\n\n  .slick-slider {\n    min-height: 0px;\n    min-width: 0px;\n\n    .slick-arrow {\n      display: none !important;\n      z-index: 10;\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      background-color: rgba(0, 0, 0, 0.2);\n      transition: background-color 0.3s ease;\n\n      &:before {\n        display: none;\n      }\n\n      &.slick-prev {\n        left: 0;\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.8);\n      }\n\n      svg {\n        color: #fff;\n        width: 1rem;\n      }\n    }\n\n    .slick-slide {\n      /* 간격 조절은 따로 없으니 여기서 */\n      /* padding: 0 10px; */\n      transition: all 0.5s ease-in-out;\n\n      > div {\n        font-size: 0;\n      }\n\n      /* 간격을 위해 가상 선택자 사용 */\n      display: flex;\n      &:before {\n        display: block;\n        content: '';\n        width: 10px;\n        flex: 1 1 1;\n      }\n      &:after {\n        display: block;\n        content: '';\n        width: 10px;\n        flex: 1 1 1;\n      }\n      /* \n      @media only screen and (max-width: 480px) {\n        &:before,\n        &:after {\n          width: 10px;\n        }\n      } */\n    }\n  }\n`;\n\nexport { SliderWrap, SliderItem, ImgWrap, ImgItem };\n","import styled from 'styled-components';\n\nconst Video = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n`;\n\nconst ImgWrap = styled.div`\n  overflow: hidden;\n  position: relative;\n  height: 0;\n  padding-bottom: 56.26%;\n`;\n\nconst SliderItem = styled.div`\n  overflow: visible;\n  outline: 0;\n`;\n\nconst SliderWrap = styled.div`\n  min-height: 0px;\n  min-width: 0px;\n\n  .slick-arrow {\n    display: none !important;\n    z-index: 10;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background-color: rgba(0, 0, 0, 0.2);\n    transition: background-color 0.3s ease;\n\n    &:before {\n      display: none;\n    }\n\n    &.slick-prev {\n      left: 0;\n    }\n\n    &.slick-next {\n      right: 0;\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.8);\n    }\n\n    svg {\n      color: #fff;\n      width: 1rem;\n    }\n  }\n\n  .slick-track {\n    background-color: #000;\n  }\n\n  .slick-slide > div {\n    font-size: 0;\n  }\n\n  .slick-dots {\n    position: relative;\n    bottom: 0;\n    margin-top: 15px;\n  }\n\n  @media screen and (max-width: 600px) {\n    .slick-dots > li {\n      margin: 0;\n    }\n  }\n`;\n\nexport { SliderWrap, SliderItem, ImgWrap, Video };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Article = styled.div`\n  margin-top: 30px;\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 10px;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media screen and (max-width: 600px) {\n    h2 {\n      font-size: 1.25rem;\n    }\n  }\n`;\n\nconst ArticleItem = ({ title, children }) => {\n  return (\n    <Article>\n      <h2>{title}</h2>\n      {children}\n    </Article>\n  );\n};\n\nArticleItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default ArticleItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Error = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst Inner = styled.div`\n  p {\n    font-size: 2rem;\n  }\n`;\n\nconst NotFoundResult = ({ text }) => {\n  return (\n    <Error>\n      <Inner>\n        <p>{text}</p>\n      </Inner>\n    </Error>\n  );\n};\n\nNotFoundResult.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default NotFoundResult;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    '& nav': {\n      margin: '30px auto 0',\n      display: 'inline-block',\n    },\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst PaginationControlled = ({ curPage, totalPage, history }) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(curPage);\n  const handleChange = (event, value) => {\n    setPage(value);\n\n    const path = history.location.pathname;\n    const querys = history.location.search;\n    const cutNum = querys.indexOf('page=') + 5;\n    const newQeurys = `${path}${querys.substring(0, cutNum)}${value}`;\n\n    history.push(newQeurys);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Pagination count={totalPage} page={page} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default withRouter(PaginationControlled);\n\nPaginationControlled.propTypes = {\n  curPage: PropTypes.number.isRequired,\n  totalPage: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    location: PropTypes.object,\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { IMG_PATH } from 'utils/common';\n\nimport { Wrap, Inner, PageTitle } from 'styles/basic.style';\n\nimport Background from 'components/Background';\nimport NotFoundResult from 'components/NotFoundResult';\nimport PaginationControlled from 'components/PaginationControlled';\n\nimport styled from 'styled-components';\n\nconst CardList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 2rem;\n  justify-content: space-between;\n  background: #fff;\n  box-sizing: border-box;\n  color: #000;\n\n  @media screen and (max-width: 960px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media screen and (max-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 1rem;\n\n    h3 {\n      font-size: 0.875rem;\n    }\n  }\n\n  > li {\n    a {\n      > div {\n        position: relative;\n        width: 100%;\n        padding-top: 150%;\n      }\n    }\n    img {\n      position: absolute;\n      overflow: hidden;\n      display: block;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      box-sizing: border-box;\n    }\n    h3 {\n      margin-top: 10px;\n      max-width: 200px;\n    }\n  }\n`;\n\nconst SearchContainer = () => {\n  const { lists } = useSelector(store => store.search);\n  const { bgImg } = useSelector(store => store.data);\n\n  return (\n    <>\n      {lists.total_results > 0 ? (\n        <Wrap>\n          <Inner>\n            <Background bgImgs={bgImg} />\n            <PageTitle>\n              검색 결과 <span>{`(${lists.page}/${lists.total_pages})`}</span>\n            </PageTitle>\n            <CardList>\n              {lists.results.map(item => {\n                return (\n                  <li key={item.id}>\n                    <Link to={`/detail/${item.id}`}>\n                      <div>\n                        <img\n                          src={`${IMG_PATH.w342}${item.poster_path}`}\n                          onError={e => {\n                            e.target.src =\n                              'https://dummyimage.com/200x300.png/dddddd/999999&text=+No+Image+';\n                          }}\n                          alt={item.original_title}\n                        />\n                      </div>\n                      <h3>{item.title}</h3>\n                    </Link>\n                  </li>\n                );\n              })}\n            </CardList>\n            <PaginationControlled\n              curPage={lists.page}\n              totalPage={lists.total_pages}\n            />\n          </Inner>\n        </Wrap>\n      ) : (\n        <NotFoundResult text=\"검색 결과가 없습니다.\" />\n      )}\n    </>\n  );\n};\n\nexport default SearchContainer;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport GlobalStyle from 'styles/global.style';\n\nimport Header from 'components/header/Header';\nimport NotFound404 from 'components/NotFound404';\nimport Intro from 'pages/Intro';\nimport Detail from 'pages/Detail';\nimport Search from 'pages/Search';\n\nconst App = () => {\n  console.log('what');\n  return (\n    <>\n      <GlobalStyle />\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          {/* <Route path=\"/movie/:id\" component={Intro} />\n          <Route path=\"/detail/:id\" component={Detail} />\n          <Route path=\"/search/:id\" component={Search} />\n          <Route component={NotFound404} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport fetchData from 'utils/fetchData';\nimport { CATEGORY, IMG_PATH } from 'utils/common';\nimport * as loadingActions from 'modules/loading';\nimport * as searchActions from 'modules/search';\nimport * as dataActions from 'modules/data';\n\nimport SearchContainer from 'containers/SearchContainer';\nimport Loading from 'components/Loading';\n\nconst Search = ({ location }) => {\n  const dispatch = useDispatch();\n  const [loadedPage, setLoadedpage] = useState(false);\n  const { isLoading } = useSelector(store => store.loading);\n  const { lists } = useSelector(store => store.search);\n\n  const queries = location.search.slice(1).split('&');\n\n  useEffect(() => {\n    if (!lists.length > 0) {\n      dispatch(loadingActions.startLoading());\n      fetchData(`${CATEGORY.SEARCH}movie`, [...queries])\n        .then(result => {\n          if (result.results.length > 0) {\n            dispatch(searchActions.setLists(result));\n\n            const someBgImg = result.results.filter(\n              item => item.backdrop_path !== null,\n            );\n            // console.log(someBgImg[0].backdrop_path);\n            dispatch(\n              dataActions.setBgImg([\n                `${IMG_PATH.w1280}${someBgImg[0].backdrop_path}`,\n              ]),\n            );\n          }\n          return 'finished getting data';\n        })\n        .then(() => {\n          setTimeout(() => {\n            dispatch(loadingActions.finishLoading());\n            setLoadedpage(true);\n          }, 500);\n        });\n    }\n  }, [location]);\n\n  return isLoading ? <Loading /> : loadedPage && <SearchContainer />;\n};\n\nSearch.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(Search);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport rootReducers from 'modules';\n\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\nconst store = createStore(rootReducers, devToolsEnhancer());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}